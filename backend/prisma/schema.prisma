// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  name         String
  photo        String        @default("hhttps://s3.amazonaws.com/37assets/svn/765-default-avatar.png")
  password     String?
  auctionItems AuctionItems[]
  bids Bids[]
  notifications Notification[]
 }
model AuctionItems {
  id           Int           @id @default(autoincrement())
  startingPrice Int
  name         String 
  description  String
  deadline     DateTime
  bids         Bids[]
  photo        String
  userId       Int
 status Status @default(PENDING)
  isApproved Boolean @default(false)
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  category   Category
  notification Notification[]
}
enum Category {
  ELECTRONICS
  VEHICLES
  FASHION
  ART
  SPORTS
  BOOKS
  TOYS
  TOOLS
  OTHERS
}
enum Status{
  PENDING
  SOLD
  UNSOLD
}
 
 model Bids{
   id         Int            @id @default(autoincrement())
   price Int
   userId Int
   auctionId Int
   auction    AuctionItems   @relation(fields: [auctionId], references: [id], onDelete: Cascade) 
   user       User           @relation(fields: [userId], references: [id], onDelete: Cascade)
 }
 model Notification{
  id         Int            @id @default(autoincrement())
  userId     Int
  user User @relation(fields: [userId],references: [id],onDelete: Cascade)
  auctionId Int
  auction AuctionItems @relation(fields: [auctionId],references: [id],onDelete: Cascade)
  seen Boolean
 }
 model Payment {
  id         String @id @default(uuid())
  pidx       String @unique
  auctionId  String
  createdAt  DateTime @default(now())
}
